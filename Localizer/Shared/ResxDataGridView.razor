@using System.Dynamic;
@if (Tree is not null)
{
    <MudPaper Style="min-width:1000px;width:100vw" Height="90vh">
        <MudDataGrid Items="@_items" Virtualize="true" FixedHeader="true" Height="89vh" HorizontalScrollbar="true" Style="min-width:100vw-400"
            Striped="true">
            <Columns>
                <PropertyColumn Property="x => x.Column1" Title="Key" CellStyle="min-width:300px" />
                @foreach (var column in Tree.Cultures)
                {
                    <PropertyColumn Property="x => x.Column1" Title="@column" CellStyle="min-width:300px" />
                }
                <TemplateColumn CellClass="d-flex justify-end" Title="Col-X" Sortable="true" CellStyle="min-width:100vw">
                    <CellTemplate>
                        <MudStack Row>
                         <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">@context.Item.Column1</MudButton>
                     </MudStack>
                 </CellTemplate>
             </TemplateColumn>
         </Columns>
     </MudDataGrid>
 </MudPaper>
}
@code {

    [Parameter]
    public ResxLoadDataTree Tree { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    public record Model(string Column1, string Column2, string Column3, string Column4, string Column5)
    {
    };

    private List<Model> _items = new List<Model>();

    protected override void OnInitialized()
    {
        for (var i = 0; i < 20000; i++)
        {
            _items.Add(new Model($"Value_{i}", $"Value_{i}", $"Value_{i}", $"Value_{i}", $"Value_{i}"));
        }
    }
}